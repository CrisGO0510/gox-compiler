Terminals unused in grammar

    DEREF
    NOT


State 37 conflicts: 1 shift/reduce
State 38 conflicts: 6 shift/reduce
State 39 conflicts: 2 shift/reduce
State 40 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: ε
    3           | statements statement

    4 statement: assignment
    5          | vardecl
    6          | funcdecl
    7          | if_stmt
    8          | while_stmt
    9          | BREAK SEMI
   10          | CONTINUE SEMI
   11          | RETURN expression SEMI
   12          | PRINT expression SEMI

   13 assignment: ID ASSIGN expression SEMI

   14 vardecl: VAR ID type init_opt SEMI
   15        | CONST ID type init_opt SEMI
   16        | CONST ID init_opt SEMI

   17 init_opt: ε
   18         | ASSIGN expression

   19 funcdecl: FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE
   20         | IMPORT FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE

   21 if_stmt: IF expression LBRACE statements RBRACE
   22        | IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE

   23 while_stmt: WHILE expression LBRACE statements RBRACE

   24 parameters: ε
   25           | ID type
   26           | parameters COMMA ID type

   27 type: INT
   28     | FLOAT
   29     | CHAR
   30     | BOOL

   31 expression: orterm
   32           | expression LOR orterm

   33 orterm: andterm
   34       | orterm LAND andterm

   35 andterm: relterm
   36        | andterm LT relterm
   37        | andterm GT relterm
   38        | andterm LE relterm
   39        | andterm GE relterm
   40        | andterm EQ relterm
   41        | andterm NE relterm

   42 relterm: addterm
   43        | relterm PLUS addterm
   44        | relterm MINUS addterm

   45 addterm: factor
   46        | addterm TIMES factor
   47        | addterm DIVIDE factor

   48 factor: literal
   49       | PLUS expression
   50       | MINUS expression
   51       | GROW expression
   52       | LPAREN expression RPAREN
   53       | type LPAREN expression RPAREN
   54       | ID LPAREN arguments RPAREN
   55       | ID

   56 arguments: ε
   57          | expression
   58          | arguments COMMA expression

   59 literal: INTEGER_LITERAL
   60        | FLOAT_LITERAL
   61        | CHAR_LITERAL
   62        | TRUE
   63        | FALSE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 21 22
    ELSE (259) 22
    WHILE (260) 23
    BREAK (261) 9
    CONTINUE (262) 10
    VAR (263) 14
    CONST (264) 15 16
    FUNC (265) 19 20
    PRINT (266) 12
    RETURN (267) 11
    IMPORT (268) 20
    INTEGER_LITERAL <intval> (269) 59
    FLOAT_LITERAL <floatval> (270) 60
    CHAR_LITERAL <charval> (271) 61
    TRUE <boolval> (272) 62
    FALSE <boolval> (273) 63
    ID <id> (274) 13 14 15 16 19 20 25 26 54 55
    INT (275) 27
    FLOAT (276) 28
    CHAR (277) 29
    BOOL (278) 30
    LE (279) 38
    GE (280) 39
    EQ (281) 40
    NE (282) 41
    LAND (283) 34
    LOR (284) 32
    PLUS (285) 43 49
    MINUS (286) 44 50
    TIMES (287) 46
    DIVIDE (288) 47
    LT (289) 36
    GT (290) 37
    GROW (291) 51
    ASSIGN (292) 13 18
    SEMI (293) 9 10 11 12 13 14 15 16
    COMMA (294) 26 58
    LPAREN (295) 19 20 52 53 54
    RPAREN (296) 19 20 52 53 54
    LBRACE (297) 19 20 21 22 23
    RBRACE (298) 19 20 21 22 23
    DEREF (299)
    NOT (300)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    program (47)
        on left: 1
        on right: 0
    statements (48)
        on left: 2 3
        on right: 1 3 19 20 21 22 23
    statement (49)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 3
    assignment (50)
        on left: 13
        on right: 4
    vardecl (51)
        on left: 14 15 16
        on right: 5
    init_opt (52)
        on left: 17 18
        on right: 14 15 16
    funcdecl (53)
        on left: 19 20
        on right: 6
    if_stmt (54)
        on left: 21 22
        on right: 7
    while_stmt (55)
        on left: 23
        on right: 8
    parameters (56)
        on left: 24 25 26
        on right: 19 20 26
    type (57)
        on left: 27 28 29 30
        on right: 14 15 19 20 25 26 53
    expression (58)
        on left: 31 32
        on right: 11 12 13 18 21 22 23 32 49 50 51 52 53 57 58
    orterm (59)
        on left: 33 34
        on right: 31 32 34
    andterm (60)
        on left: 35 36 37 38 39 40 41
        on right: 33 34 36 37 38 39 40 41
    relterm (61)
        on left: 42 43 44
        on right: 35 36 37 38 39 40 41 43 44
    addterm (62)
        on left: 45 46 47
        on right: 42 43 44 46 47
    factor (63)
        on left: 48 49 50 51 52 53 54 55
        on right: 45 46 47
    arguments (64)
        on left: 56 57 58
        on right: 54 58
    literal (65)
        on left: 59 60 61 62 63
        on right: 48


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements •
    3 statements: statements • statement

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14

    $default  reduce using rule 1 (program)

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 3

    0 $accept: program $end •

    $default  accept


State 4

   21 if_stmt: IF • expression LBRACE statements RBRACE
   22        | IF • expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 36
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 5

   23 while_stmt: WHILE • expression LBRACE statements RBRACE

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 43
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 6

    9 statement: BREAK • SEMI

    SEMI  shift, and go to state 44


State 7

   10 statement: CONTINUE • SEMI

    SEMI  shift, and go to state 45


State 8

   14 vardecl: VAR • ID type init_opt SEMI

    ID  shift, and go to state 46


State 9

   15 vardecl: CONST • ID type init_opt SEMI
   16        | CONST • ID init_opt SEMI

    ID  shift, and go to state 47


State 10

   19 funcdecl: FUNC • ID LPAREN parameters RPAREN type LBRACE statements RBRACE

    ID  shift, and go to state 48


State 11

   12 statement: PRINT • expression SEMI

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 49
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 12

   11 statement: RETURN • expression SEMI

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 50
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 13

   20 funcdecl: IMPORT • FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE

    FUNC  shift, and go to state 51


State 14

   13 assignment: ID • ASSIGN expression SEMI

    ASSIGN  shift, and go to state 52


State 15

    3 statements: statements statement •

    $default  reduce using rule 3 (statements)


State 16

    4 statement: assignment •

    $default  reduce using rule 4 (statement)


State 17

    5 statement: vardecl •

    $default  reduce using rule 5 (statement)


State 18

    6 statement: funcdecl •

    $default  reduce using rule 6 (statement)


State 19

    7 statement: if_stmt •

    $default  reduce using rule 7 (statement)


State 20

    8 statement: while_stmt •

    $default  reduce using rule 8 (statement)


State 21

   59 literal: INTEGER_LITERAL •

    $default  reduce using rule 59 (literal)


State 22

   60 literal: FLOAT_LITERAL •

    $default  reduce using rule 60 (literal)


State 23

   61 literal: CHAR_LITERAL •

    $default  reduce using rule 61 (literal)


State 24

   62 literal: TRUE •

    $default  reduce using rule 62 (literal)


State 25

   63 literal: FALSE •

    $default  reduce using rule 63 (literal)


State 26

   54 factor: ID • LPAREN arguments RPAREN
   55       | ID •

    LPAREN  shift, and go to state 53

    $default  reduce using rule 55 (factor)


State 27

   27 type: INT •

    $default  reduce using rule 27 (type)


State 28

   28 type: FLOAT •

    $default  reduce using rule 28 (type)


State 29

   29 type: CHAR •

    $default  reduce using rule 29 (type)


State 30

   30 type: BOOL •

    $default  reduce using rule 30 (type)


State 31

   49 factor: PLUS • expression

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 54
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 32

   50 factor: MINUS • expression

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 55
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 33

   51 factor: GROW • expression

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 56
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 34

   52 factor: LPAREN • expression RPAREN

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 57
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 35

   53 factor: type • LPAREN expression RPAREN

    LPAREN  shift, and go to state 58


State 36

   21 if_stmt: IF expression • LBRACE statements RBRACE
   22        | IF expression • LBRACE statements RBRACE ELSE LBRACE statements RBRACE
   32 expression: expression • LOR orterm

    LOR     shift, and go to state 59
    LBRACE  shift, and go to state 60


State 37

   31 expression: orterm •
   34 orterm: orterm • LAND andterm

    LAND  shift, and go to state 61

    LAND      [reduce using rule 31 (expression)]
    $default  reduce using rule 31 (expression)


State 38

   33 orterm: andterm •
   36 andterm: andterm • LT relterm
   37        | andterm • GT relterm
   38        | andterm • LE relterm
   39        | andterm • GE relterm
   40        | andterm • EQ relterm
   41        | andterm • NE relterm

    LE  shift, and go to state 62
    GE  shift, and go to state 63
    EQ  shift, and go to state 64
    NE  shift, and go to state 65
    LT  shift, and go to state 66
    GT  shift, and go to state 67

    LE        [reduce using rule 33 (orterm)]
    GE        [reduce using rule 33 (orterm)]
    EQ        [reduce using rule 33 (orterm)]
    NE        [reduce using rule 33 (orterm)]
    LT        [reduce using rule 33 (orterm)]
    GT        [reduce using rule 33 (orterm)]
    $default  reduce using rule 33 (orterm)


State 39

   35 andterm: relterm •
   43 relterm: relterm • PLUS addterm
   44        | relterm • MINUS addterm

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    PLUS      [reduce using rule 35 (andterm)]
    MINUS     [reduce using rule 35 (andterm)]
    $default  reduce using rule 35 (andterm)


State 40

   42 relterm: addterm •
   46 addterm: addterm • TIMES factor
   47        | addterm • DIVIDE factor

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    TIMES     [reduce using rule 42 (relterm)]
    DIVIDE    [reduce using rule 42 (relterm)]
    $default  reduce using rule 42 (relterm)


State 41

   45 addterm: factor •

    $default  reduce using rule 45 (addterm)


State 42

   48 factor: literal •

    $default  reduce using rule 48 (factor)


State 43

   23 while_stmt: WHILE expression • LBRACE statements RBRACE
   32 expression: expression • LOR orterm

    LOR     shift, and go to state 59
    LBRACE  shift, and go to state 72


State 44

    9 statement: BREAK SEMI •

    $default  reduce using rule 9 (statement)


State 45

   10 statement: CONTINUE SEMI •

    $default  reduce using rule 10 (statement)


State 46

   14 vardecl: VAR ID • type init_opt SEMI

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    BOOL   shift, and go to state 30

    type  go to state 73


State 47

   15 vardecl: CONST ID • type init_opt SEMI
   16        | CONST ID • init_opt SEMI

    INT     shift, and go to state 27
    FLOAT   shift, and go to state 28
    CHAR    shift, and go to state 29
    BOOL    shift, and go to state 30
    ASSIGN  shift, and go to state 74

    $default  reduce using rule 17 (init_opt)

    init_opt  go to state 75
    type      go to state 76


State 48

   19 funcdecl: FUNC ID • LPAREN parameters RPAREN type LBRACE statements RBRACE

    LPAREN  shift, and go to state 77


State 49

   12 statement: PRINT expression • SEMI
   32 expression: expression • LOR orterm

    LOR   shift, and go to state 59
    SEMI  shift, and go to state 78


State 50

   11 statement: RETURN expression • SEMI
   32 expression: expression • LOR orterm

    LOR   shift, and go to state 59
    SEMI  shift, and go to state 79


State 51

   20 funcdecl: IMPORT FUNC • ID LPAREN parameters RPAREN type LBRACE statements RBRACE

    ID  shift, and go to state 80


State 52

   13 assignment: ID ASSIGN • expression SEMI

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 81
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 53

   54 factor: ID LPAREN • arguments RPAREN

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    $default  reduce using rule 56 (arguments)

    type        go to state 35
    expression  go to state 82
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    arguments   go to state 83
    literal     go to state 42


State 54

   32 expression: expression • LOR orterm
   49 factor: PLUS expression •

    $default  reduce using rule 49 (factor)


State 55

   32 expression: expression • LOR orterm
   50 factor: MINUS expression •

    $default  reduce using rule 50 (factor)


State 56

   32 expression: expression • LOR orterm
   51 factor: GROW expression •

    $default  reduce using rule 51 (factor)


State 57

   32 expression: expression • LOR orterm
   52 factor: LPAREN expression • RPAREN

    LOR     shift, and go to state 59
    RPAREN  shift, and go to state 84


State 58

   53 factor: type LPAREN • expression RPAREN

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 85
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 59

   32 expression: expression LOR • orterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    orterm   go to state 86
    andterm  go to state 38
    relterm  go to state 39
    addterm  go to state 40
    factor   go to state 41
    literal  go to state 42


State 60

   21 if_stmt: IF expression LBRACE • statements RBRACE
   22        | IF expression LBRACE • statements RBRACE ELSE LBRACE statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 87


State 61

   34 orterm: orterm LAND • andterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    andterm  go to state 88
    relterm  go to state 39
    addterm  go to state 40
    factor   go to state 41
    literal  go to state 42


State 62

   38 andterm: andterm LE • relterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    relterm  go to state 89
    addterm  go to state 40
    factor   go to state 41
    literal  go to state 42


State 63

   39 andterm: andterm GE • relterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    relterm  go to state 90
    addterm  go to state 40
    factor   go to state 41
    literal  go to state 42


State 64

   40 andterm: andterm EQ • relterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    relterm  go to state 91
    addterm  go to state 40
    factor   go to state 41
    literal  go to state 42


State 65

   41 andterm: andterm NE • relterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    relterm  go to state 92
    addterm  go to state 40
    factor   go to state 41
    literal  go to state 42


State 66

   36 andterm: andterm LT • relterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    relterm  go to state 93
    addterm  go to state 40
    factor   go to state 41
    literal  go to state 42


State 67

   37 andterm: andterm GT • relterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    relterm  go to state 94
    addterm  go to state 40
    factor   go to state 41
    literal  go to state 42


State 68

   43 relterm: relterm PLUS • addterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    addterm  go to state 95
    factor   go to state 41
    literal  go to state 42


State 69

   44 relterm: relterm MINUS • addterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    addterm  go to state 96
    factor   go to state 41
    literal  go to state 42


State 70

   46 addterm: addterm TIMES • factor

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    factor   go to state 97
    literal  go to state 42


State 71

   47 addterm: addterm DIVIDE • factor

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type     go to state 35
    factor   go to state 98
    literal  go to state 42


State 72

   23 while_stmt: WHILE expression LBRACE • statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 99


State 73

   14 vardecl: VAR ID type • init_opt SEMI

    ASSIGN  shift, and go to state 74

    $default  reduce using rule 17 (init_opt)

    init_opt  go to state 100


State 74

   18 init_opt: ASSIGN • expression

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 101
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 75

   16 vardecl: CONST ID init_opt • SEMI

    SEMI  shift, and go to state 102


State 76

   15 vardecl: CONST ID type • init_opt SEMI

    ASSIGN  shift, and go to state 74

    $default  reduce using rule 17 (init_opt)

    init_opt  go to state 103


State 77

   19 funcdecl: FUNC ID LPAREN • parameters RPAREN type LBRACE statements RBRACE

    ID  shift, and go to state 104

    $default  reduce using rule 24 (parameters)

    parameters  go to state 105


State 78

   12 statement: PRINT expression SEMI •

    $default  reduce using rule 12 (statement)


State 79

   11 statement: RETURN expression SEMI •

    $default  reduce using rule 11 (statement)


State 80

   20 funcdecl: IMPORT FUNC ID • LPAREN parameters RPAREN type LBRACE statements RBRACE

    LPAREN  shift, and go to state 106


State 81

   13 assignment: ID ASSIGN expression • SEMI
   32 expression: expression • LOR orterm

    LOR   shift, and go to state 59
    SEMI  shift, and go to state 107


State 82

   32 expression: expression • LOR orterm
   57 arguments: expression •

    LOR  shift, and go to state 59

    $default  reduce using rule 57 (arguments)


State 83

   54 factor: ID LPAREN arguments • RPAREN
   58 arguments: arguments • COMMA expression

    COMMA   shift, and go to state 108
    RPAREN  shift, and go to state 109


State 84

   52 factor: LPAREN expression RPAREN •

    $default  reduce using rule 52 (factor)


State 85

   32 expression: expression • LOR orterm
   53 factor: type LPAREN expression • RPAREN

    LOR     shift, and go to state 59
    RPAREN  shift, and go to state 110


State 86

   32 expression: expression LOR orterm •
   34 orterm: orterm • LAND andterm

    LAND  shift, and go to state 61

    $default  reduce using rule 32 (expression)


State 87

    3 statements: statements • statement
   21 if_stmt: IF expression LBRACE statements • RBRACE
   22        | IF expression LBRACE statements • RBRACE ELSE LBRACE statements RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 111

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 88

   34 orterm: orterm LAND andterm •
   36 andterm: andterm • LT relterm
   37        | andterm • GT relterm
   38        | andterm • LE relterm
   39        | andterm • GE relterm
   40        | andterm • EQ relterm
   41        | andterm • NE relterm

    LE  shift, and go to state 62
    GE  shift, and go to state 63
    EQ  shift, and go to state 64
    NE  shift, and go to state 65
    LT  shift, and go to state 66
    GT  shift, and go to state 67

    $default  reduce using rule 34 (orterm)


State 89

   38 andterm: andterm LE relterm •
   43 relterm: relterm • PLUS addterm
   44        | relterm • MINUS addterm

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 38 (andterm)


State 90

   39 andterm: andterm GE relterm •
   43 relterm: relterm • PLUS addterm
   44        | relterm • MINUS addterm

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 39 (andterm)


State 91

   40 andterm: andterm EQ relterm •
   43 relterm: relterm • PLUS addterm
   44        | relterm • MINUS addterm

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 40 (andterm)


State 92

   41 andterm: andterm NE relterm •
   43 relterm: relterm • PLUS addterm
   44        | relterm • MINUS addterm

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 41 (andterm)


State 93

   36 andterm: andterm LT relterm •
   43 relterm: relterm • PLUS addterm
   44        | relterm • MINUS addterm

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 36 (andterm)


State 94

   37 andterm: andterm GT relterm •
   43 relterm: relterm • PLUS addterm
   44        | relterm • MINUS addterm

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 37 (andterm)


State 95

   43 relterm: relterm PLUS addterm •
   46 addterm: addterm • TIMES factor
   47        | addterm • DIVIDE factor

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 43 (relterm)


State 96

   44 relterm: relterm MINUS addterm •
   46 addterm: addterm • TIMES factor
   47        | addterm • DIVIDE factor

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71

    $default  reduce using rule 44 (relterm)


State 97

   46 addterm: addterm TIMES factor •

    $default  reduce using rule 46 (addterm)


State 98

   47 addterm: addterm DIVIDE factor •

    $default  reduce using rule 47 (addterm)


State 99

    3 statements: statements • statement
   23 while_stmt: WHILE expression LBRACE statements • RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 112

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 100

   14 vardecl: VAR ID type init_opt • SEMI

    SEMI  shift, and go to state 113


State 101

   18 init_opt: ASSIGN expression •
   32 expression: expression • LOR orterm

    LOR  shift, and go to state 59

    $default  reduce using rule 18 (init_opt)


State 102

   16 vardecl: CONST ID init_opt SEMI •

    $default  reduce using rule 16 (vardecl)


State 103

   15 vardecl: CONST ID type init_opt • SEMI

    SEMI  shift, and go to state 114


State 104

   25 parameters: ID • type

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    BOOL   shift, and go to state 30

    type  go to state 115


State 105

   19 funcdecl: FUNC ID LPAREN parameters • RPAREN type LBRACE statements RBRACE
   26 parameters: parameters • COMMA ID type

    COMMA   shift, and go to state 116
    RPAREN  shift, and go to state 117


State 106

   20 funcdecl: IMPORT FUNC ID LPAREN • parameters RPAREN type LBRACE statements RBRACE

    ID  shift, and go to state 104

    $default  reduce using rule 24 (parameters)

    parameters  go to state 118


State 107

   13 assignment: ID ASSIGN expression SEMI •

    $default  reduce using rule 13 (assignment)


State 108

   58 arguments: arguments COMMA • expression

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    INT              shift, and go to state 27
    FLOAT            shift, and go to state 28
    CHAR             shift, and go to state 29
    BOOL             shift, and go to state 30
    PLUS             shift, and go to state 31
    MINUS            shift, and go to state 32
    GROW             shift, and go to state 33
    LPAREN           shift, and go to state 34

    type        go to state 35
    expression  go to state 119
    orterm      go to state 37
    andterm     go to state 38
    relterm     go to state 39
    addterm     go to state 40
    factor      go to state 41
    literal     go to state 42


State 109

   54 factor: ID LPAREN arguments RPAREN •

    $default  reduce using rule 54 (factor)


State 110

   53 factor: type LPAREN expression RPAREN •

    $default  reduce using rule 53 (factor)


State 111

   21 if_stmt: IF expression LBRACE statements RBRACE •
   22        | IF expression LBRACE statements RBRACE • ELSE LBRACE statements RBRACE

    ELSE  shift, and go to state 120

    $default  reduce using rule 21 (if_stmt)


State 112

   23 while_stmt: WHILE expression LBRACE statements RBRACE •

    $default  reduce using rule 23 (while_stmt)


State 113

   14 vardecl: VAR ID type init_opt SEMI •

    $default  reduce using rule 14 (vardecl)


State 114

   15 vardecl: CONST ID type init_opt SEMI •

    $default  reduce using rule 15 (vardecl)


State 115

   25 parameters: ID type •

    $default  reduce using rule 25 (parameters)


State 116

   26 parameters: parameters COMMA • ID type

    ID  shift, and go to state 121


State 117

   19 funcdecl: FUNC ID LPAREN parameters RPAREN • type LBRACE statements RBRACE

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    BOOL   shift, and go to state 30

    type  go to state 122


State 118

   20 funcdecl: IMPORT FUNC ID LPAREN parameters • RPAREN type LBRACE statements RBRACE
   26 parameters: parameters • COMMA ID type

    COMMA   shift, and go to state 116
    RPAREN  shift, and go to state 123


State 119

   32 expression: expression • LOR orterm
   58 arguments: arguments COMMA expression •

    LOR  shift, and go to state 59

    $default  reduce using rule 58 (arguments)


State 120

   22 if_stmt: IF expression LBRACE statements RBRACE ELSE • LBRACE statements RBRACE

    LBRACE  shift, and go to state 124


State 121

   26 parameters: parameters COMMA ID • type

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    BOOL   shift, and go to state 30

    type  go to state 125


State 122

   19 funcdecl: FUNC ID LPAREN parameters RPAREN type • LBRACE statements RBRACE

    LBRACE  shift, and go to state 126


State 123

   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN • type LBRACE statements RBRACE

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    BOOL   shift, and go to state 30

    type  go to state 127


State 124

   22 if_stmt: IF expression LBRACE statements RBRACE ELSE LBRACE • statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 128


State 125

   26 parameters: parameters COMMA ID type •

    $default  reduce using rule 26 (parameters)


State 126

   19 funcdecl: FUNC ID LPAREN parameters RPAREN type LBRACE • statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 129


State 127

   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN type • LBRACE statements RBRACE

    LBRACE  shift, and go to state 130


State 128

    3 statements: statements • statement
   22 if_stmt: IF expression LBRACE statements RBRACE ELSE LBRACE statements • RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 131

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 129

    3 statements: statements • statement
   19 funcdecl: FUNC ID LPAREN parameters RPAREN type LBRACE statements • RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 132

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 130

   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN type LBRACE • statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 133


State 131

   22 if_stmt: IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE •

    $default  reduce using rule 22 (if_stmt)


State 132

   19 funcdecl: FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE •

    $default  reduce using rule 19 (funcdecl)


State 133

    3 statements: statements • statement
   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN type LBRACE statements • RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 134

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 134

   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE •

    $default  reduce using rule 20 (funcdecl)
