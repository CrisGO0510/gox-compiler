Terminals unused in grammar

    DEREF
    NOT


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: ε
    3           | statements statement

    4 statement: assignment
    5          | vardecl
    6          | funcdecl
    7          | if_stmt
    8          | while_stmt
    9          | BREAK SEMI
   10          | CONTINUE SEMI
   11          | RETURN expression SEMI
   12          | PRINT expression SEMI

   13 assignment: ID ASSIGN expression SEMI

   14 vardecl: VAR ID type init_opt SEMI
   15        | CONST ID type init_opt SEMI
   16        | CONST ID init_opt SEMI

   17 init_opt: ε
   18         | ASSIGN expression

   19 funcdecl: FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE
   20         | IMPORT FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE

   21 if_stmt: IF expression LBRACE statements RBRACE
   22        | IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE

   23 while_stmt: WHILE expression LBRACE statements RBRACE

   24 parameters: ε
   25           | ID type
   26           | parameters COMMA ID type

   27 type: INT
   28     | FLOAT
   29     | CHAR
   30     | BOOL

   31 expression: orterm

   32 orterm: orterm LOR andterm
   33       | andterm

   34 andterm: andterm LAND relterm
   35        | relterm

   36 relterm: relterm LT addterm
   37        | relterm GT addterm
   38        | relterm LE addterm
   39        | relterm GE addterm
   40        | relterm EQ addterm
   41        | relterm NE addterm
   42        | addterm

   43 addterm: addterm PLUS multterm
   44        | addterm MINUS multterm
   45        | multterm

   46 multterm: multterm TIMES factor
   47         | multterm DIVIDE factor
   48         | factor

   49 factor: literal
   50       | ID
   51       | ID LPAREN arguments RPAREN
   52       | LPAREN expression RPAREN
   53       | PLUS factor
   54       | MINUS factor
   55       | factor GROW factor

   56 arguments: ε
   57          | expression
   58          | arguments COMMA expression

   59 literal: INTEGER_LITERAL
   60        | FLOAT_LITERAL
   61        | CHAR_LITERAL
   62        | TRUE
   63        | FALSE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 21 22
    ELSE (259) 22
    WHILE (260) 23
    BREAK (261) 9
    CONTINUE (262) 10
    VAR (263) 14
    CONST (264) 15 16
    FUNC (265) 19 20
    PRINT (266) 12
    RETURN (267) 11
    IMPORT (268) 20
    INTEGER_LITERAL <intval> (269) 59
    FLOAT_LITERAL <floatval> (270) 60
    CHAR_LITERAL <charval> (271) 61
    TRUE <boolval> (272) 62
    FALSE <boolval> (273) 63
    ID <id> (274) 13 14 15 16 19 20 25 26 50 51
    INT (275) 27
    FLOAT (276) 28
    CHAR (277) 29
    BOOL (278) 30
    LE (279) 38
    GE (280) 39
    EQ (281) 40
    NE (282) 41
    LAND (283) 34
    LOR (284) 32
    PLUS (285) 43 53
    MINUS (286) 44 54
    TIMES (287) 46
    DIVIDE (288) 47
    LT (289) 36
    GT (290) 37
    GROW (291) 55
    ASSIGN (292) 13 18
    SEMI (293) 9 10 11 12 13 14 15 16
    COMMA (294) 26 58
    LPAREN (295) 19 20 51 52
    RPAREN (296) 19 20 51 52
    LBRACE (297) 19 20 21 22 23
    RBRACE (298) 19 20 21 22 23
    DEREF (299)
    NOT (300)
    UPLUS (301)
    UMINUS (302)
    UGROW (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1
        on right: 0
    statements (51)
        on left: 2 3
        on right: 1 3 19 20 21 22 23
    statement (52)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 3
    assignment (53)
        on left: 13
        on right: 4
    vardecl (54)
        on left: 14 15 16
        on right: 5
    init_opt (55)
        on left: 17 18
        on right: 14 15 16
    funcdecl (56)
        on left: 19 20
        on right: 6
    if_stmt (57)
        on left: 21 22
        on right: 7
    while_stmt (58)
        on left: 23
        on right: 8
    parameters (59)
        on left: 24 25 26
        on right: 19 20 26
    type (60)
        on left: 27 28 29 30
        on right: 14 15 19 20 25 26
    expression (61)
        on left: 31
        on right: 11 12 13 18 21 22 23 52 57 58
    orterm (62)
        on left: 32 33
        on right: 31 32
    andterm (63)
        on left: 34 35
        on right: 32 33 34
    relterm (64)
        on left: 36 37 38 39 40 41 42
        on right: 34 35 36 37 38 39 40 41
    addterm (65)
        on left: 43 44 45
        on right: 36 37 38 39 40 41 42 43 44
    multterm (66)
        on left: 46 47 48
        on right: 43 44 45 46 47
    factor (67)
        on left: 49 50 51 52 53 54 55
        on right: 46 47 48 53 54 55
    arguments (68)
        on left: 56 57 58
        on right: 51 58
    literal (69)
        on left: 59 60 61 62 63
        on right: 49


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: statements •
    3 statements: statements • statement

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14

    $default  reduce using rule 1 (program)

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 3

    0 $accept: program $end •

    $default  accept


State 4

   21 if_stmt: IF • expression LBRACE statements RBRACE
   22        | IF • expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    expression  go to state 30
    orterm      go to state 31
    andterm     go to state 32
    relterm     go to state 33
    addterm     go to state 34
    multterm    go to state 35
    factor      go to state 36
    literal     go to state 37


State 5

   23 while_stmt: WHILE • expression LBRACE statements RBRACE

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    expression  go to state 38
    orterm      go to state 31
    andterm     go to state 32
    relterm     go to state 33
    addterm     go to state 34
    multterm    go to state 35
    factor      go to state 36
    literal     go to state 37


State 6

    9 statement: BREAK • SEMI

    SEMI  shift, and go to state 39


State 7

   10 statement: CONTINUE • SEMI

    SEMI  shift, and go to state 40


State 8

   14 vardecl: VAR • ID type init_opt SEMI

    ID  shift, and go to state 41


State 9

   15 vardecl: CONST • ID type init_opt SEMI
   16        | CONST • ID init_opt SEMI

    ID  shift, and go to state 42


State 10

   19 funcdecl: FUNC • ID LPAREN parameters RPAREN type LBRACE statements RBRACE

    ID  shift, and go to state 43


State 11

   12 statement: PRINT • expression SEMI

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    expression  go to state 44
    orterm      go to state 31
    andterm     go to state 32
    relterm     go to state 33
    addterm     go to state 34
    multterm    go to state 35
    factor      go to state 36
    literal     go to state 37


State 12

   11 statement: RETURN • expression SEMI

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    expression  go to state 45
    orterm      go to state 31
    andterm     go to state 32
    relterm     go to state 33
    addterm     go to state 34
    multterm    go to state 35
    factor      go to state 36
    literal     go to state 37


State 13

   20 funcdecl: IMPORT • FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE

    FUNC  shift, and go to state 46


State 14

   13 assignment: ID • ASSIGN expression SEMI

    ASSIGN  shift, and go to state 47


State 15

    3 statements: statements statement •

    $default  reduce using rule 3 (statements)


State 16

    4 statement: assignment •

    $default  reduce using rule 4 (statement)


State 17

    5 statement: vardecl •

    $default  reduce using rule 5 (statement)


State 18

    6 statement: funcdecl •

    $default  reduce using rule 6 (statement)


State 19

    7 statement: if_stmt •

    $default  reduce using rule 7 (statement)


State 20

    8 statement: while_stmt •

    $default  reduce using rule 8 (statement)


State 21

   59 literal: INTEGER_LITERAL •

    $default  reduce using rule 59 (literal)


State 22

   60 literal: FLOAT_LITERAL •

    $default  reduce using rule 60 (literal)


State 23

   61 literal: CHAR_LITERAL •

    $default  reduce using rule 61 (literal)


State 24

   62 literal: TRUE •

    $default  reduce using rule 62 (literal)


State 25

   63 literal: FALSE •

    $default  reduce using rule 63 (literal)


State 26

   50 factor: ID •
   51       | ID • LPAREN arguments RPAREN

    LPAREN  shift, and go to state 48

    $default  reduce using rule 50 (factor)


State 27

   53 factor: PLUS • factor

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    factor   go to state 49
    literal  go to state 37


State 28

   54 factor: MINUS • factor

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    factor   go to state 50
    literal  go to state 37


State 29

   52 factor: LPAREN • expression RPAREN

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    expression  go to state 51
    orterm      go to state 31
    andterm     go to state 32
    relterm     go to state 33
    addterm     go to state 34
    multterm    go to state 35
    factor      go to state 36
    literal     go to state 37


State 30

   21 if_stmt: IF expression • LBRACE statements RBRACE
   22        | IF expression • LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE  shift, and go to state 52


State 31

   31 expression: orterm •
   32 orterm: orterm • LOR andterm

    LOR  shift, and go to state 53

    $default  reduce using rule 31 (expression)


State 32

   33 orterm: andterm •
   34 andterm: andterm • LAND relterm

    LAND  shift, and go to state 54

    $default  reduce using rule 33 (orterm)


State 33

   35 andterm: relterm •
   36 relterm: relterm • LT addterm
   37        | relterm • GT addterm
   38        | relterm • LE addterm
   39        | relterm • GE addterm
   40        | relterm • EQ addterm
   41        | relterm • NE addterm

    LE  shift, and go to state 55
    GE  shift, and go to state 56
    EQ  shift, and go to state 57
    NE  shift, and go to state 58
    LT  shift, and go to state 59
    GT  shift, and go to state 60

    $default  reduce using rule 35 (andterm)


State 34

   42 relterm: addterm •
   43 addterm: addterm • PLUS multterm
   44        | addterm • MINUS multterm

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 42 (relterm)


State 35

   45 addterm: multterm •
   46 multterm: multterm • TIMES factor
   47         | multterm • DIVIDE factor

    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 45 (addterm)


State 36

   48 multterm: factor •
   55 factor: factor • GROW factor

    GROW  shift, and go to state 65

    $default  reduce using rule 48 (multterm)


State 37

   49 factor: literal •

    $default  reduce using rule 49 (factor)


State 38

   23 while_stmt: WHILE expression • LBRACE statements RBRACE

    LBRACE  shift, and go to state 66


State 39

    9 statement: BREAK SEMI •

    $default  reduce using rule 9 (statement)


State 40

   10 statement: CONTINUE SEMI •

    $default  reduce using rule 10 (statement)


State 41

   14 vardecl: VAR ID • type init_opt SEMI

    INT    shift, and go to state 67
    FLOAT  shift, and go to state 68
    CHAR   shift, and go to state 69
    BOOL   shift, and go to state 70

    type  go to state 71


State 42

   15 vardecl: CONST ID • type init_opt SEMI
   16        | CONST ID • init_opt SEMI

    INT     shift, and go to state 67
    FLOAT   shift, and go to state 68
    CHAR    shift, and go to state 69
    BOOL    shift, and go to state 70
    ASSIGN  shift, and go to state 72

    $default  reduce using rule 17 (init_opt)

    init_opt  go to state 73
    type      go to state 74


State 43

   19 funcdecl: FUNC ID • LPAREN parameters RPAREN type LBRACE statements RBRACE

    LPAREN  shift, and go to state 75


State 44

   12 statement: PRINT expression • SEMI

    SEMI  shift, and go to state 76


State 45

   11 statement: RETURN expression • SEMI

    SEMI  shift, and go to state 77


State 46

   20 funcdecl: IMPORT FUNC • ID LPAREN parameters RPAREN type LBRACE statements RBRACE

    ID  shift, and go to state 78


State 47

   13 assignment: ID ASSIGN • expression SEMI

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    expression  go to state 79
    orterm      go to state 31
    andterm     go to state 32
    relterm     go to state 33
    addterm     go to state 34
    multterm    go to state 35
    factor      go to state 36
    literal     go to state 37


State 48

   51 factor: ID LPAREN • arguments RPAREN

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    $default  reduce using rule 56 (arguments)

    expression  go to state 80
    orterm      go to state 31
    andterm     go to state 32
    relterm     go to state 33
    addterm     go to state 34
    multterm    go to state 35
    factor      go to state 36
    arguments   go to state 81
    literal     go to state 37


State 49

   53 factor: PLUS factor •
   55       | factor • GROW factor

    $default  reduce using rule 53 (factor)


State 50

   54 factor: MINUS factor •
   55       | factor • GROW factor

    $default  reduce using rule 54 (factor)


State 51

   52 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 82


State 52

   21 if_stmt: IF expression LBRACE • statements RBRACE
   22        | IF expression LBRACE • statements RBRACE ELSE LBRACE statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 83


State 53

   32 orterm: orterm LOR • andterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    andterm   go to state 84
    relterm   go to state 33
    addterm   go to state 34
    multterm  go to state 35
    factor    go to state 36
    literal   go to state 37


State 54

   34 andterm: andterm LAND • relterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    relterm   go to state 85
    addterm   go to state 34
    multterm  go to state 35
    factor    go to state 36
    literal   go to state 37


State 55

   38 relterm: relterm LE • addterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    addterm   go to state 86
    multterm  go to state 35
    factor    go to state 36
    literal   go to state 37


State 56

   39 relterm: relterm GE • addterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    addterm   go to state 87
    multterm  go to state 35
    factor    go to state 36
    literal   go to state 37


State 57

   40 relterm: relterm EQ • addterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    addterm   go to state 88
    multterm  go to state 35
    factor    go to state 36
    literal   go to state 37


State 58

   41 relterm: relterm NE • addterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    addterm   go to state 89
    multterm  go to state 35
    factor    go to state 36
    literal   go to state 37


State 59

   36 relterm: relterm LT • addterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    addterm   go to state 90
    multterm  go to state 35
    factor    go to state 36
    literal   go to state 37


State 60

   37 relterm: relterm GT • addterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    addterm   go to state 91
    multterm  go to state 35
    factor    go to state 36
    literal   go to state 37


State 61

   43 addterm: addterm PLUS • multterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    multterm  go to state 92
    factor    go to state 36
    literal   go to state 37


State 62

   44 addterm: addterm MINUS • multterm

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    multterm  go to state 93
    factor    go to state 36
    literal   go to state 37


State 63

   46 multterm: multterm TIMES • factor

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    factor   go to state 94
    literal  go to state 37


State 64

   47 multterm: multterm DIVIDE • factor

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    factor   go to state 95
    literal  go to state 37


State 65

   55 factor: factor GROW • factor

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    factor   go to state 96
    literal  go to state 37


State 66

   23 while_stmt: WHILE expression LBRACE • statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 97


State 67

   27 type: INT •

    $default  reduce using rule 27 (type)


State 68

   28 type: FLOAT •

    $default  reduce using rule 28 (type)


State 69

   29 type: CHAR •

    $default  reduce using rule 29 (type)


State 70

   30 type: BOOL •

    $default  reduce using rule 30 (type)


State 71

   14 vardecl: VAR ID type • init_opt SEMI

    ASSIGN  shift, and go to state 72

    $default  reduce using rule 17 (init_opt)

    init_opt  go to state 98


State 72

   18 init_opt: ASSIGN • expression

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    expression  go to state 99
    orterm      go to state 31
    andterm     go to state 32
    relterm     go to state 33
    addterm     go to state 34
    multterm    go to state 35
    factor      go to state 36
    literal     go to state 37


State 73

   16 vardecl: CONST ID init_opt • SEMI

    SEMI  shift, and go to state 100


State 74

   15 vardecl: CONST ID type • init_opt SEMI

    ASSIGN  shift, and go to state 72

    $default  reduce using rule 17 (init_opt)

    init_opt  go to state 101


State 75

   19 funcdecl: FUNC ID LPAREN • parameters RPAREN type LBRACE statements RBRACE

    ID  shift, and go to state 102

    $default  reduce using rule 24 (parameters)

    parameters  go to state 103


State 76

   12 statement: PRINT expression SEMI •

    $default  reduce using rule 12 (statement)


State 77

   11 statement: RETURN expression SEMI •

    $default  reduce using rule 11 (statement)


State 78

   20 funcdecl: IMPORT FUNC ID • LPAREN parameters RPAREN type LBRACE statements RBRACE

    LPAREN  shift, and go to state 104


State 79

   13 assignment: ID ASSIGN expression • SEMI

    SEMI  shift, and go to state 105


State 80

   57 arguments: expression •

    $default  reduce using rule 57 (arguments)


State 81

   51 factor: ID LPAREN arguments • RPAREN
   58 arguments: arguments • COMMA expression

    COMMA   shift, and go to state 106
    RPAREN  shift, and go to state 107


State 82

   52 factor: LPAREN expression RPAREN •

    $default  reduce using rule 52 (factor)


State 83

    3 statements: statements • statement
   21 if_stmt: IF expression LBRACE statements • RBRACE
   22        | IF expression LBRACE statements • RBRACE ELSE LBRACE statements RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 108

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 84

   32 orterm: orterm LOR andterm •
   34 andterm: andterm • LAND relterm

    LAND  shift, and go to state 54

    $default  reduce using rule 32 (orterm)


State 85

   34 andterm: andterm LAND relterm •
   36 relterm: relterm • LT addterm
   37        | relterm • GT addterm
   38        | relterm • LE addterm
   39        | relterm • GE addterm
   40        | relterm • EQ addterm
   41        | relterm • NE addterm

    LE  shift, and go to state 55
    GE  shift, and go to state 56
    EQ  shift, and go to state 57
    NE  shift, and go to state 58
    LT  shift, and go to state 59
    GT  shift, and go to state 60

    $default  reduce using rule 34 (andterm)


State 86

   38 relterm: relterm LE addterm •
   43 addterm: addterm • PLUS multterm
   44        | addterm • MINUS multterm

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 38 (relterm)


State 87

   39 relterm: relterm GE addterm •
   43 addterm: addterm • PLUS multterm
   44        | addterm • MINUS multterm

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 39 (relterm)


State 88

   40 relterm: relterm EQ addterm •
   43 addterm: addterm • PLUS multterm
   44        | addterm • MINUS multterm

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 40 (relterm)


State 89

   41 relterm: relterm NE addterm •
   43 addterm: addterm • PLUS multterm
   44        | addterm • MINUS multterm

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 41 (relterm)


State 90

   36 relterm: relterm LT addterm •
   43 addterm: addterm • PLUS multterm
   44        | addterm • MINUS multterm

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 36 (relterm)


State 91

   37 relterm: relterm GT addterm •
   43 addterm: addterm • PLUS multterm
   44        | addterm • MINUS multterm

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 37 (relterm)


State 92

   43 addterm: addterm PLUS multterm •
   46 multterm: multterm • TIMES factor
   47         | multterm • DIVIDE factor

    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 43 (addterm)


State 93

   44 addterm: addterm MINUS multterm •
   46 multterm: multterm • TIMES factor
   47         | multterm • DIVIDE factor

    TIMES   shift, and go to state 63
    DIVIDE  shift, and go to state 64

    $default  reduce using rule 44 (addterm)


State 94

   46 multterm: multterm TIMES factor •
   55 factor: factor • GROW factor

    GROW  shift, and go to state 65

    $default  reduce using rule 46 (multterm)


State 95

   47 multterm: multterm DIVIDE factor •
   55 factor: factor • GROW factor

    GROW  shift, and go to state 65

    $default  reduce using rule 47 (multterm)


State 96

   55 factor: factor • GROW factor
   55       | factor GROW factor •

    $default  reduce using rule 55 (factor)


State 97

    3 statements: statements • statement
   23 while_stmt: WHILE expression LBRACE statements • RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 109

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 98

   14 vardecl: VAR ID type init_opt • SEMI

    SEMI  shift, and go to state 110


State 99

   18 init_opt: ASSIGN expression •

    $default  reduce using rule 18 (init_opt)


State 100

   16 vardecl: CONST ID init_opt SEMI •

    $default  reduce using rule 16 (vardecl)


State 101

   15 vardecl: CONST ID type init_opt • SEMI

    SEMI  shift, and go to state 111


State 102

   25 parameters: ID • type

    INT    shift, and go to state 67
    FLOAT  shift, and go to state 68
    CHAR   shift, and go to state 69
    BOOL   shift, and go to state 70

    type  go to state 112


State 103

   19 funcdecl: FUNC ID LPAREN parameters • RPAREN type LBRACE statements RBRACE
   26 parameters: parameters • COMMA ID type

    COMMA   shift, and go to state 113
    RPAREN  shift, and go to state 114


State 104

   20 funcdecl: IMPORT FUNC ID LPAREN • parameters RPAREN type LBRACE statements RBRACE

    ID  shift, and go to state 102

    $default  reduce using rule 24 (parameters)

    parameters  go to state 115


State 105

   13 assignment: ID ASSIGN expression SEMI •

    $default  reduce using rule 13 (assignment)


State 106

   58 arguments: arguments COMMA • expression

    INTEGER_LITERAL  shift, and go to state 21
    FLOAT_LITERAL    shift, and go to state 22
    CHAR_LITERAL     shift, and go to state 23
    TRUE             shift, and go to state 24
    FALSE            shift, and go to state 25
    ID               shift, and go to state 26
    PLUS             shift, and go to state 27
    MINUS            shift, and go to state 28
    LPAREN           shift, and go to state 29

    expression  go to state 116
    orterm      go to state 31
    andterm     go to state 32
    relterm     go to state 33
    addterm     go to state 34
    multterm    go to state 35
    factor      go to state 36
    literal     go to state 37


State 107

   51 factor: ID LPAREN arguments RPAREN •

    $default  reduce using rule 51 (factor)


State 108

   21 if_stmt: IF expression LBRACE statements RBRACE •
   22        | IF expression LBRACE statements RBRACE • ELSE LBRACE statements RBRACE

    ELSE  shift, and go to state 117

    $default  reduce using rule 21 (if_stmt)


State 109

   23 while_stmt: WHILE expression LBRACE statements RBRACE •

    $default  reduce using rule 23 (while_stmt)


State 110

   14 vardecl: VAR ID type init_opt SEMI •

    $default  reduce using rule 14 (vardecl)


State 111

   15 vardecl: CONST ID type init_opt SEMI •

    $default  reduce using rule 15 (vardecl)


State 112

   25 parameters: ID type •

    $default  reduce using rule 25 (parameters)


State 113

   26 parameters: parameters COMMA • ID type

    ID  shift, and go to state 118


State 114

   19 funcdecl: FUNC ID LPAREN parameters RPAREN • type LBRACE statements RBRACE

    INT    shift, and go to state 67
    FLOAT  shift, and go to state 68
    CHAR   shift, and go to state 69
    BOOL   shift, and go to state 70

    type  go to state 119


State 115

   20 funcdecl: IMPORT FUNC ID LPAREN parameters • RPAREN type LBRACE statements RBRACE
   26 parameters: parameters • COMMA ID type

    COMMA   shift, and go to state 113
    RPAREN  shift, and go to state 120


State 116

   58 arguments: arguments COMMA expression •

    $default  reduce using rule 58 (arguments)


State 117

   22 if_stmt: IF expression LBRACE statements RBRACE ELSE • LBRACE statements RBRACE

    LBRACE  shift, and go to state 121


State 118

   26 parameters: parameters COMMA ID • type

    INT    shift, and go to state 67
    FLOAT  shift, and go to state 68
    CHAR   shift, and go to state 69
    BOOL   shift, and go to state 70

    type  go to state 122


State 119

   19 funcdecl: FUNC ID LPAREN parameters RPAREN type • LBRACE statements RBRACE

    LBRACE  shift, and go to state 123


State 120

   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN • type LBRACE statements RBRACE

    INT    shift, and go to state 67
    FLOAT  shift, and go to state 68
    CHAR   shift, and go to state 69
    BOOL   shift, and go to state 70

    type  go to state 124


State 121

   22 if_stmt: IF expression LBRACE statements RBRACE ELSE LBRACE • statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 125


State 122

   26 parameters: parameters COMMA ID type •

    $default  reduce using rule 26 (parameters)


State 123

   19 funcdecl: FUNC ID LPAREN parameters RPAREN type LBRACE • statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 126


State 124

   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN type • LBRACE statements RBRACE

    LBRACE  shift, and go to state 127


State 125

    3 statements: statements • statement
   22 if_stmt: IF expression LBRACE statements RBRACE ELSE LBRACE statements • RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 128

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 126

    3 statements: statements • statement
   19 funcdecl: FUNC ID LPAREN parameters RPAREN type LBRACE statements • RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 129

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 127

   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN type LBRACE • statements RBRACE

    $default  reduce using rule 2 (statements)

    statements  go to state 130


State 128

   22 if_stmt: IF expression LBRACE statements RBRACE ELSE LBRACE statements RBRACE •

    $default  reduce using rule 22 (if_stmt)


State 129

   19 funcdecl: FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE •

    $default  reduce using rule 19 (funcdecl)


State 130

    3 statements: statements • statement
   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN type LBRACE statements • RBRACE

    IF        shift, and go to state 4
    WHILE     shift, and go to state 5
    BREAK     shift, and go to state 6
    CONTINUE  shift, and go to state 7
    VAR       shift, and go to state 8
    CONST     shift, and go to state 9
    FUNC      shift, and go to state 10
    PRINT     shift, and go to state 11
    RETURN    shift, and go to state 12
    IMPORT    shift, and go to state 13
    ID        shift, and go to state 14
    RBRACE    shift, and go to state 131

    statement   go to state 15
    assignment  go to state 16
    vardecl     go to state 17
    funcdecl    go to state 18
    if_stmt     go to state 19
    while_stmt  go to state 20


State 131

   20 funcdecl: IMPORT FUNC ID LPAREN parameters RPAREN type LBRACE statements RBRACE •

    $default  reduce using rule 20 (funcdecl)
